{"version":3,"sources":["util/icons/github.svg","components/githubHeader/GithubHeader.js","components/scoreboard/ScoreBoard.js","components/header/Header.js","components/cards/Cards.js","util/icons/javascript.svg","util/icons/css3.svg","util/icons/git.svg","util/icons/graphql.svg","util/icons/html5.svg","util/icons/node-js.svg","util/icons/npm.svg","util/icons/react.svg","util/icons/redux.svg","util/icons/sass.svg","util/icons/typescript.svg","util/icons/webpack.svg","components/cardContainer/CardContainer.js","App.js","index.js"],"names":["GithubHeader","props","className","href","target","rel","src","githubIcon","alt","ScoreBoard","useState","topScore","setTopScore","useEffect","score","Header","Card","onClick","image","name","CardContainer","javascriptLogo","key","uuid","selected","cssLogo","gitLogo","graphqlLogo","htmlLogo","nodeJsLogo","npmLogo","reactLogo","reduxLogo","sassLogo","typeScriptLogo","WebpackLogo","cardList","setCardList","cards","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","shuffle","map","card","filter","resetScore","tempList","tempCard","Object","assign","resetList","increaseScore","updateCard","cardClick","App","setScore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67f84b56.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/github.1a872651.svg\";","import React from 'react'\nimport './style.scss'\nimport githubIcon from '../../util/icons/github.svg'\n\nexport default function GithubHeader(props){\n\n    return(\n        <div className=\"GithubHeader\">\n            <a href=\"https://github.com/Delta-a-Sierra/\" target=\"_blank\" rel=\"noreferrer\" >\n                <img className=\"github-logo\" src={githubIcon} alt=\"github logo\" />\n                <h2>Delta-a-Sierra</h2>\n            </a>\n\n        </div>\n    )\n\n}","import React, {useState, useEffect} from 'react'\nimport './style.scss'\n\nexport default function ScoreBoard(props){\n\n    const [topScore, setTopScore] = useState(0)\n\n    useEffect(() => {\n        const changeTopScore = (score) => {\n            if(score > topScore){\n                setTopScore(score)\n            }\n        }\n\n        changeTopScore(props.score)\n\n    },[props.score, topScore]) \n\n\n    return(\n        <div className=\"ScoreBoard\">\n            <div className=\"current-score\">\n                <h3>Score: {props.score}</h3>\n            </div>\n            <div className=\"best-score\">\n                <h3> Top Score: {topScore}</h3>\n            </div>\n        </div>    \n    )\n}","import React from 'react';\nimport './style.scss'\nimport GithubHeader from '../githubHeader/GithubHeader'\nimport ScoreBoard from '../scoreboard/ScoreBoard'\n\n\nexport default function Header(props){\n\n    return(\n        <div className=\"Header\">\n            <GithubHeader />\n            <h1>Web Tech <br/> Memory Test</h1>\n            <ScoreBoard score={props.score}/>\n\n            {/* <div>\n                <button onClick={increaseScore}>Increase Score</button>\n                <button onClick={resetScore}>Wrong Choice</button>\n            </div> */}\n        </div>\n    )\n}","import React from 'react'\nimport './style.scss'\n\n\nexport default function Card (props){\n    return(\n        <div className=\"Card\" onClick={props.onClick}>\n            <img src={props.image} alt={props.alt}/>\n            <p>{props.name}</p>\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/javascript.e798217b.svg\";","export default __webpack_public_path__ + \"static/media/css3.f2a19a89.svg\";","export default __webpack_public_path__ + \"static/media/git.21117a66.svg\";","export default __webpack_public_path__ + \"static/media/graphql.96d33774.svg\";","export default __webpack_public_path__ + \"static/media/html5.e0928361.svg\";","export default __webpack_public_path__ + \"static/media/node-js.9b34f2e7.svg\";","export default __webpack_public_path__ + \"static/media/npm.c42d59f6.svg\";","export default __webpack_public_path__ + \"static/media/react.eab12de5.svg\";","export default __webpack_public_path__ + \"static/media/redux.8f00b1c9.svg\";","export default __webpack_public_path__ + \"static/media/sass.50f81052.svg\";","export default __webpack_public_path__ + \"static/media/typescript.5f5a7e4a.svg\";","export default __webpack_public_path__ + \"static/media/webpack.67eb8244.svg\";","import React, {useState} from 'react'\nimport './style.scss'\nimport Card from '../cards/Cards'\nimport uuid from 'react-uuid'\n\nimport javascriptLogo from '../../util/icons/javascript.svg'\nimport cssLogo from '../../util/icons/css3.svg'\nimport gitLogo from '../../util/icons/git.svg'\nimport graphqlLogo from '../../util/icons/graphql.svg'\nimport htmlLogo from '../../util/icons/html5.svg'\nimport nodeJsLogo from '../../util/icons/node-js.svg'\nimport npmLogo from '../../util/icons/npm.svg'\nimport reactLogo from '../../util/icons/react.svg'\nimport reduxLogo from '../../util/icons/redux.svg'\nimport sassLogo from '../../util/icons/sass.svg'\nimport typeScriptLogo from '../../util/icons/typescript.svg'\nimport WebpackLogo from '../../util/icons/webpack.svg'\n\n\nexport default function CardContainer(props){\n    const [cardList, setCardList] = useState([\n        {image: javascriptLogo, name: \"JavaScript\", key: uuid(), selected: false},\n        {image: cssLogo, name: \"CSS\", key: uuid(), selected: false},\n        {image: gitLogo, name: \"GIT\", key: uuid(), selected: false},\n        {image: graphqlLogo, name: \"GraphQL\", key: uuid(), selected: false},\n        {image: htmlLogo, name: \"HTML\", key: uuid(), selected: false},\n        {image: nodeJsLogo, name: \"Node Js\", key: uuid(), selected: false},\n        {image: npmLogo, name: \"NPM\", key: uuid(), selected: false},\n        {image: reactLogo, name: \"React\", key: uuid(), selected: false},\n        {image: reduxLogo, name: \"Redux\", key: uuid(), selected: false},\n        {image: sassLogo, name: \"Sass\", key: uuid(), selected: false},\n        {image: typeScriptLogo, name: \"TypeScript\", key: uuid(), selected: false},\n        {image: WebpackLogo, name: \"Webpack\", key: uuid(), selected: false}\n    ])\n\n    const shuffle = (array) => {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n        while (0 !== currentIndex) {\n      \n          randomIndex = Math.floor(Math.random() * currentIndex);\n          currentIndex -= 1;\n      \n          temporaryValue = array[currentIndex];\n          array[currentIndex] = array[randomIndex];\n          array[randomIndex] = temporaryValue;\n        }\n        return array;\n    }\n\n    const cardClick = (key) => {\n        const resetList = () => {\n            const tempList = cardList.map((card) => {\n                const tempCard = Object.assign({}, card)\n                tempCard.selected = false\n                return tempCard\n            })\n            setCardList(tempList)\n        }\n\n        const updateCard = (key) => {\n            const tempList = cardList.map((card) => {\n                if(card.key === key){\n                    const tempCard = Object.assign({}, card)\n                    tempCard.selected = true\n                    return tempCard\n                }\n                return card\n            })\n            setCardList(tempList)\n        }\n\n\n        const clickedCard = cardList.filter((card) => card.key === key)[0]\n        if(clickedCard.selected === true){\n            props.resetScore()\n            resetList()\n            return null\n        }\n        props.increaseScore()\n        updateCard(key)\n    }\n\n    const cards = shuffle(cardList.map((card) => <Card {...card} alt={`${card.name} logo`} selected={card.selected} onClick={() => cardClick(card.key)}/>))\n    \n    return(\n        <div className=\"CardContainer\">\n            <div className=\"cards\"> \n                {cards}\n            </div>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport './App.scss';\nimport Header from './components/header/Header'\nimport CardContainer from './components/cardContainer/CardContainer'\n\nfunction App() {\n  const [score, setScore] = useState(0)\n\n  const increaseScore = () => {\n    setScore(score + 1)\n  }\n\n  const resetScore = () => {\n    setScore(0)\n  }\n\n  return (\n    <div className=\"App\">\n      <Header score={score}/>\n      <CardContainer increaseScore={increaseScore} resetScore={resetScore}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}